Given a sorted array A of N elements, search for a given key K and return 1 if the element is found. If the element is not present in the array, return 0.

Expected time Complexity- O(logN)

Input Format

First line of the input contains an integer N which is the total number of elements in the array A.
Second line contains N space-separated integers which are the elements of the array A.
The third contains the value of K.
Constraints

0 < N <= 10^5
0 < A[i], K <= 10^6
Output Format

Print 1 if Search is Successful i.e. the key is found, Else print 0
Sample Input 0

5
2 3 4 7 24
7
Sample Output 0

1
***************************************************************SOLUTION**************************************************************************

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int binary_search(int *arr,int left_index,int right_index,int key)
{
    
    while(left_index<=right_index)
    {
        int mid=(left_index + right_index)/2;
        if(arr[mid]>key)
            right_index=mid-1;
        if(arr[mid]<key)  
            left_index=mid+1;
        if(arr[mid]==key)
            return 1;
    }
    return 0;
    
}

int main() {
    int size,key;
    scanf("%d",&size);
    int arr[size];
    for(int i=0;i<size;i++)
        scanf("%d",&arr[i]);
    scanf("%d",&key);
    int left_index=0;
    int right_index=size-1;
    
    int result=binary_search(arr, left_index, right_index, key);
    printf("%d",result);
      
    return 0;
}
