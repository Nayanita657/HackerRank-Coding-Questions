Given an array A of N distinct integers which is first increasing and then decreasing. Find the maximum number in the array. If the array does not decrease print the last element.

Expected time Complexity- O(logN)

Input Format

First lne of the input contains an integer N which is the total number of elements in the array A.
Second line contains N space-separated integers which are the elements of the array A.
Constraints

0 < N <= 10^5
0 < A[i], K <= 10^6
Output Format

Print the largest element in the array
Sample Input 0

6
12 15 21 87 23 11
Sample Output 0

87

***************************************************************SOLUTION*********************************************************

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

void find_max(int *arr, int left_index, int right_index)
{
    if(arr[right_index]>arr[right_index-1])
    {
        printf("%d",arr[right_index]);
        exit(0);
    }
        
    else
    {
        while(left_index<=right_index)
        {
            int mid=(left_index+right_index)/2;
            if(arr[mid]>arr[mid+1])
            {
                if(arr[mid]> arr[mid-1])
                {
                    printf("%d",arr[mid]);
                    exit(0);
                }
                    
                else
                {
                    right_index=mid;
                }
                    
            }
            if(arr[mid]<arr[mid+1])
            {
                left_index=mid;
            }
                
        }
    }
}

int main() {
    int size;
    scanf("%d",&size);
    int arr[size];
    for(int i=0;i<size;i++)
        scanf("%d",&arr[i]);
    int left_index=0;
    int right_index=size-1;
    
   find_max(arr,left_index,right_index);
    
   //printf("%d",result); 

        
    return 0;
}
